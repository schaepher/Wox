name: Build

on:
  push:
    branches:
      - v2

jobs:
  test:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: install dependencies
        run: |
          brew update
          brew install just nodejs flutter cocoapods pnpm lefthook go create-dmg
          curl -LsSf https://astral.sh/uv/install.sh | sh
      - name: Test
        run: make test
  build-macos-amd64:
    needs: test
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: install dependencies
        run: |
          brew update
          brew install just nodejs flutter cocoapods pnpm lefthook go create-dmg
      - name: Build
        run: just release darwin-amd64
      - name: Deploy nightly release amd64
        uses: WebFreak001/deploy-nightly@v3.0.0
        with:
          upload_url: https://uploads.github.com/repos/schaepher/Wox/releases/175128313/assets{?name,label}
          release_id: 175128313
          asset_path: ./Release/wox-mac-amd64.dmg # path to archive to upload
          asset_name: wox-mac-amd64-$$.dmg # name to upload the release as, use $$ to insert date (YYYYMMDD) and 6 letter commit hash
          asset_content_type: application/x-elf # required by GitHub API
          max_releases: 1
  build-macos-arm64:
    needs: test
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: install dependencies
        run: |
          brew update
          brew install just nodejs flutter cocoapods pnpm lefthook go create-dmg
      - name: Build
        run: just release darwin-arm64
      - name: Deploy nightly release arm64
        uses: WebFreak001/deploy-nightly@v3.0.0
        with:
          upload_url: https://uploads.github.com/repos/schaepher/Wox/releases/175128313/assets{?name,label}
          release_id: 175128313
          asset_path: ./Release/wox-mac-arm64.dmg # path to archive to upload
          asset_name: wox-mac-arm64-$$.dmg # name to upload the release as, use $$ to insert date (YYYYMMDD) and 6 letter commit hash
          asset_content_type: application/x-elf # required by GitHub API
          max_releases: 1
  build-windows:
    needs: test
    runs-on: windows-latest
    steps:
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/checkout@v3
      - name: install dependencies
        run: |
          choco install just nodejs flutter pnpm go upx
      - name: Build
        run: |
          $Env:PATH += ";C:\tools\flutter\bin"
          just release windows
      - name: Deploy nightly release
        uses: WebFreak001/deploy-nightly@v3.0.0
        with:
          upload_url: https://uploads.github.com/repos/schaepher/Wox/releases/175128313/assets{?name,label}
          release_id: 175128313
          asset_path: ./Release/wox-windows-amd64.exe # path to archive to upload
          asset_name: wox-windows-amd64-$$.exe # name to upload the release as, use $$ to insert date (YYYYMMDD) and 6 letter commit hash
          asset_content_type: application/x-msdownload # required by GitHub API
          max_releases: 1
  build-linux:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: install dependencies
        run: |
          wget -qO - 'https://proget.makedeb.org/debian-feeds/prebuilt-mpr.pub' | gpg --dearmor | sudo tee /usr/share/keyrings/prebuilt-mpr-archive-keyring.gpg 1> /dev/null
          echo "deb [arch=all,$(dpkg --print-architecture) signed-by=/usr/share/keyrings/prebuilt-mpr-archive-keyring.gpg] https://proget.makedeb.org prebuilt-mpr $(lsb_release -cs)" | sudo tee /etc/apt/sources.list.d/prebuilt-mpr.list
          sudo apt-get update -y
          sudo apt-get install -y just nodejs npm golang-go upx keybinder-3.0
          sudo apt-get install xcb libxtst-dev libxcb-xkb-dev x11-xkb-utils libx11-xcb-dev libxkbcommon-x11-dev libxcomposite-dev
          sudo snap install flutter --classic
      - name: Build
        run: just release linux
      - name: Deploy nightly release
        uses: WebFreak001/deploy-nightly@v3.0.0
        with:
          upload_url: https://uploads.github.com/repos/schaepher/Wox/releases/175128313/assets{?name,label}
          release_id: 175128313
          asset_path: ./Release/wox-linux-amd64 # path to archive to upload
          asset_name: wox-linux-amd64-$$ # name to upload the release as, use $$ to insert date (YYYYMMDD) and 6 letter commit hash
          asset_content_type: application/x-msdownload # required by GitHub API
          max_releases: 1